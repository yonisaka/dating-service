// Code generated by MockGen. DO NOT EDIT.
// Source: auth.go

// Package auth is a generated GoMock package.
package auth

import (
	reflect "reflect"

	jwt "github.com/golang-jwt/jwt/v5"
	gomock "go.uber.org/mock/gomock"
)

// MockAuthenticator is a mock of Authenticator interface.
type MockAuthenticator struct {
	ctrl     *gomock.Controller
	recorder *MockAuthenticatorMockRecorder
}

// MockAuthenticatorMockRecorder is the mock recorder for MockAuthenticator.
type MockAuthenticatorMockRecorder struct {
	mock *MockAuthenticator
}

// NewMockAuthenticator creates a new mock instance.
func NewMockAuthenticator(ctrl *gomock.Controller) *MockAuthenticator {
	mock := &MockAuthenticator{ctrl: ctrl}
	mock.recorder = &MockAuthenticatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthenticator) EXPECT() *MockAuthenticatorMockRecorder {
	return m.recorder
}

// CreateTokenJWT mocks base method.
func (m *MockAuthenticator) CreateTokenJWT(userID int64) *TokenDetails {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTokenJWT", userID)
	ret0, _ := ret[0].(*TokenDetails)
	return ret0
}

// CreateTokenJWT indicates an expected call of CreateTokenJWT.
func (mr *MockAuthenticatorMockRecorder) CreateTokenJWT(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTokenJWT", reflect.TypeOf((*MockAuthenticator)(nil).CreateTokenJWT), userID)
}

// RequestTokenJwt mocks base method.
func (m *MockAuthenticator) RequestTokenJwt(token string) (interface{}, jwt.MapClaims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestTokenJwt", token)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(jwt.MapClaims)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// RequestTokenJwt indicates an expected call of RequestTokenJwt.
func (mr *MockAuthenticatorMockRecorder) RequestTokenJwt(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestTokenJwt", reflect.TypeOf((*MockAuthenticator)(nil).RequestTokenJwt), token)
}
